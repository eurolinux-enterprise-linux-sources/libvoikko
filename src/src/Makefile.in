# Makefile.in generated by automake 1.11 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = src
DIST_COMMON = $(noinst_HEADERS) $(pkginclude_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/libvoikko.pc.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = libvoikko.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libvoikko_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libvoikko_la_OBJECTS = spellchecker/spell.lo \
	spellchecker/suggestions.lo spellchecker/SpellWithPriority.lo \
	spellchecker/SpellUtils.lo \
	spellchecker/suggestion/Suggestion.lo \
	spellchecker/suggestion/SuggestionStatus.lo \
	spellchecker/suggestion/SuggestionGeneratorCaseChange.lo \
	spellchecker/suggestion/SuggestionGeneratorDeletion.lo \
	spellchecker/suggestion/SuggestionGeneratorInsertion.lo \
	spellchecker/suggestion/SuggestionGeneratorInsertSpecial.lo \
	spellchecker/suggestion/SuggestionGeneratorReplacement.lo \
	spellchecker/suggestion/SuggestionGeneratorReplaceTwo.lo \
	spellchecker/suggestion/SuggestionGeneratorSplitWord.lo \
	spellchecker/suggestion/SuggestionGeneratorSwap.lo \
	spellchecker/suggestion/SuggestionGeneratorVowelChange.lo \
	spellchecker/suggestion/SuggestionStrategy.lo \
	spellchecker/suggestion/SuggestionStrategyOcr.lo \
	spellchecker/suggestion/SuggestionStrategyTyping.lo \
	utils/utils.lo utils/StringUtils.lo morphology/interface.lo \
	morphology/Analysis.lo morphology/Analyzer.lo \
	morphology/AnalyzerFactory.lo morphology/MalagaAnalyzer.lo \
	morphology/malaga/analysis.lo morphology/malaga/files.lo \
	morphology/malaga/lexicon.lo morphology/malaga/malaga_files.lo \
	morphology/malaga/patterns.lo morphology/malaga/rules.lo \
	morphology/malaga/symbols.lo morphology/malaga/value_parser.lo \
	morphology/malaga/basic.lo morphology/malaga/input.lo \
	morphology/malaga/libmalaga.lo morphology/malaga/malaga_lib.lo \
	morphology/malaga/pools.lo morphology/malaga/scanner.lo \
	morphology/malaga/tries.lo morphology/malaga/values.lo \
	setup/setup.lo setup/Dictionary.lo setup/DictionaryLoader.lo \
	setup/DictionaryException.lo setup/interface.lo \
	hyphenator/hyphenator.lo character/charset.lo \
	tokenizer/tokenizer.lo sentence/sentence.lo grammar/grammar.lo \
	grammar/cache.lo grammar/checks.lo grammar/cachesetup.lo \
	grammar/error.lo grammar/analysis.lo grammar/Sentence.lo \
	grammar/Paragraph.lo grammar/CacheEntry.lo \
	autocorrect/AutoCorrect.lo
libvoikko_la_OBJECTS = $(am_libvoikko_la_OBJECTS)
libvoikko_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libvoikko_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libvoikko_la_SOURCES)
DIST_SOURCES = $(libvoikko_la_SOURCES)
DATA = $(pkgconfig_DATA)
HEADERS = $(noinst_HEADERS) $(pkginclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DICTIONARY_PATH = @DICTIONARY_PATH@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBICONV = @LIBICONV@
LIBLDFLAGSWIN = @LIBLDFLAGSWIN@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBICONV = @LTLIBICONV@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = subdir-objects
lib_LTLIBRARIES = libvoikko.la
libvoikko_la_SOURCES = \
    spellchecker/spell.cpp spellchecker/suggestions.cpp \
    spellchecker/SpellWithPriority.cpp \
    spellchecker/SpellUtils.cpp \
    spellchecker/suggestion/Suggestion.cpp \
    spellchecker/suggestion/SuggestionStatus.cpp \
    spellchecker/suggestion/SuggestionGeneratorCaseChange.cpp \
    spellchecker/suggestion/SuggestionGeneratorDeletion.cpp \
    spellchecker/suggestion/SuggestionGeneratorInsertion.cpp \
    spellchecker/suggestion/SuggestionGeneratorInsertSpecial.cpp \
    spellchecker/suggestion/SuggestionGeneratorReplacement.cpp \
    spellchecker/suggestion/SuggestionGeneratorReplaceTwo.cpp \
    spellchecker/suggestion/SuggestionGeneratorSplitWord.cpp \
    spellchecker/suggestion/SuggestionGeneratorSwap.cpp \
    spellchecker/suggestion/SuggestionGeneratorVowelChange.cpp \
    spellchecker/suggestion/SuggestionStrategy.cpp \
    spellchecker/suggestion/SuggestionStrategyOcr.cpp \
    spellchecker/suggestion/SuggestionStrategyTyping.cpp \
    utils/utils.cpp utils/StringUtils.cpp \
    morphology/interface.cpp \
    morphology/Analysis.cpp \
    morphology/Analyzer.cpp \
    morphology/AnalyzerFactory.cpp \
    morphology/MalagaAnalyzer.cpp \
    morphology/malaga/analysis.cpp \
    morphology/malaga/files.cpp \
    morphology/malaga/lexicon.cpp \
    morphology/malaga/malaga_files.cpp \
    morphology/malaga/patterns.cpp \
    morphology/malaga/rules.cpp \
    morphology/malaga/symbols.cpp \
    morphology/malaga/value_parser.cpp \
    morphology/malaga/basic.cpp \
    morphology/malaga/input.cpp \
    morphology/malaga/libmalaga.cpp \
    morphology/malaga/malaga_lib.cpp \
    morphology/malaga/pools.cpp \
    morphology/malaga/scanner.cpp \
    morphology/malaga/tries.cpp \
    morphology/malaga/values.cpp \
    setup/setup.cpp setup/Dictionary.cpp setup/DictionaryLoader.cpp \
    setup/DictionaryException.cpp setup/interface.cpp \
    hyphenator/hyphenator.cpp character/charset.cpp \
    tokenizer/tokenizer.cpp sentence/sentence.cpp \
    grammar/grammar.cpp grammar/cache.cpp grammar/checks.cpp \
    grammar/cachesetup.cpp grammar/error.cpp grammar/analysis.cpp \
    grammar/Sentence.cpp grammar/Paragraph.cpp grammar/CacheEntry.cpp \
    autocorrect/AutoCorrect.cpp

libvoikko_la_LDFLAGS = @GLIB_LIBS@ -no-undefined -version-info 10:2:9 @LIBLDFLAGSWIN@
pkginclude_HEADERS = voikko.h
noinst_HEADERS = \
    utils/utils.hpp utils/StringUtils.hpp \
    morphology/Analysis.hpp \
    morphology/Analyzer.hpp \
    morphology/AnalyzerFactory.hpp \
    morphology/MalagaAnalyzer.hpp \
    morphology/malaga/analysis.hpp \
    morphology/malaga/input.hpp \
    morphology/malaga/malaga_files.hpp \
    morphology/malaga/patterns.hpp \
    morphology/malaga/rule_type.hpp \
    morphology/malaga/tries.hpp \
    morphology/malaga/basic.hpp \
    morphology/malaga/lexicon.hpp \
    morphology/malaga/malaga.hpp \
    morphology/malaga/pools.hpp \
    morphology/malaga/scanner.hpp \
    morphology/malaga/value_parser.hpp \
    morphology/malaga/files.hpp \
    morphology/malaga/libmalaga.hpp \
    morphology/malaga/malaga_lib.hpp \
    morphology/malaga/rules.hpp \
    morphology/malaga/symbols.hpp \
    morphology/malaga/values.hpp \
    setup/setup.hpp setup/Dictionary.hpp setup/DictionaryLoader.hpp \
    setup/DictionaryException.hpp \
    character/charset.hpp \
    hyphenator/hyphenator.hpp voikko_defs.h porting.h \
    spellchecker/spell.hpp \
    spellchecker/SpellWithPriority.hpp \
    spellchecker/SpellUtils.hpp \
    spellchecker/suggestion/Suggestion.hpp \
    spellchecker/suggestion/SuggestionGenerator.hpp \
    spellchecker/suggestion/SuggestionGeneratorCaseChange.hpp \
    spellchecker/suggestion/SuggestionGeneratorDeletion.hpp \
    spellchecker/suggestion/SuggestionGeneratorInsertion.hpp \
    spellchecker/suggestion/SuggestionGeneratorInsertSpecial.hpp \
    spellchecker/suggestion/SuggestionGeneratorReplacement.hpp \
    spellchecker/suggestion/SuggestionGeneratorReplaceTwo.hpp \
    spellchecker/suggestion/SuggestionGeneratorSplitWord.hpp \
    spellchecker/suggestion/SuggestionGeneratorSwap.hpp \
    spellchecker/suggestion/SuggestionGeneratorVowelChange.hpp \
    spellchecker/suggestion/SuggestionStrategy.hpp \
    spellchecker/suggestion/SuggestionStrategyOcr.hpp \
    spellchecker/suggestion/SuggestionStrategyTyping.hpp \
    spellchecker/suggestion/SuggestionStatus.hpp \
    grammar/cache.hpp grammar/checks.hpp grammar/error.hpp \
    grammar/cachesetup.hpp grammar/analysis.hpp \
    grammar/Token.hpp grammar/Sentence.hpp grammar/Paragraph.hpp \
    grammar/CacheEntry.hpp \
    autocorrect/AutoCorrect.hpp autocorrect/TrieNode.hpp

EXTRA_DIST = autocorrect/triecompiler.py
BUILT_SOURCES = autocorrect/data.hpp
CLEANFILES = autocorrect/data.hpp
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libvoikko.pc
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
libvoikko.pc: $(top_builddir)/config.status $(srcdir)/libvoikko.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
spellchecker/$(am__dirstamp):
	@$(MKDIR_P) spellchecker
	@: > spellchecker/$(am__dirstamp)
spellchecker/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) spellchecker/$(DEPDIR)
	@: > spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/spell.lo: spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestions.lo: spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/SpellWithPriority.lo: spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/SpellUtils.lo: spellchecker/$(am__dirstamp) \
	spellchecker/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/$(am__dirstamp):
	@$(MKDIR_P) spellchecker/suggestion
	@: > spellchecker/suggestion/$(am__dirstamp)
spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) spellchecker/suggestion/$(DEPDIR)
	@: > spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/Suggestion.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionStatus.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorCaseChange.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorDeletion.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorInsertion.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorInsertSpecial.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorReplacement.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorReplaceTwo.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorSplitWord.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorSwap.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionGeneratorVowelChange.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionStrategy.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionStrategyOcr.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
spellchecker/suggestion/SuggestionStrategyTyping.lo:  \
	spellchecker/suggestion/$(am__dirstamp) \
	spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
utils/$(am__dirstamp):
	@$(MKDIR_P) utils
	@: > utils/$(am__dirstamp)
utils/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) utils/$(DEPDIR)
	@: > utils/$(DEPDIR)/$(am__dirstamp)
utils/utils.lo: utils/$(am__dirstamp) utils/$(DEPDIR)/$(am__dirstamp)
utils/StringUtils.lo: utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
morphology/$(am__dirstamp):
	@$(MKDIR_P) morphology
	@: > morphology/$(am__dirstamp)
morphology/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) morphology/$(DEPDIR)
	@: > morphology/$(DEPDIR)/$(am__dirstamp)
morphology/interface.lo: morphology/$(am__dirstamp) \
	morphology/$(DEPDIR)/$(am__dirstamp)
morphology/Analysis.lo: morphology/$(am__dirstamp) \
	morphology/$(DEPDIR)/$(am__dirstamp)
morphology/Analyzer.lo: morphology/$(am__dirstamp) \
	morphology/$(DEPDIR)/$(am__dirstamp)
morphology/AnalyzerFactory.lo: morphology/$(am__dirstamp) \
	morphology/$(DEPDIR)/$(am__dirstamp)
morphology/MalagaAnalyzer.lo: morphology/$(am__dirstamp) \
	morphology/$(DEPDIR)/$(am__dirstamp)
morphology/malaga/$(am__dirstamp):
	@$(MKDIR_P) morphology/malaga
	@: > morphology/malaga/$(am__dirstamp)
morphology/malaga/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) morphology/malaga/$(DEPDIR)
	@: > morphology/malaga/$(DEPDIR)/$(am__dirstamp)
morphology/malaga/analysis.lo: morphology/malaga/$(am__dirstamp) \
	morphology/malaga/$(DEPDIR)/$(am__dirstamp)
morphology/malaga/files.lo: morphology/malaga/$(am__dirstamp) \
	morphology/malaga/$(DEPDIR)/$(am__dirstamp)
morphology/malaga/lexicon.lo: morphology/malaga/$(am__dirstamp) \
	morphology/malaga/$(DEPDIR)/$(am__dirstamp)
morphology/malaga/malaga_files.lo: morphology/malaga/$(am__dirstamp) \
	morphology/malaga/$(DEPDIR)/$(am__dirstamp)
morphology/malaga/patterns.lo: morphology/malaga/$(am__dirstamp) \
	morphology/malaga/$(DEPDIR)/$(am__dirstamp)
morphology/malaga/rules.lo: morphology/malaga/$(am__dirstamp) \
	morphology/malaga/$(DEPDIR)/$(am__dirstamp)
morphology/malaga/symbols.lo: morphology/malaga/$(am__dirstamp) \
	morphology/malaga/$(DEPDIR)/$(am__dirstamp)
morphology/malaga/value_parser.lo: morphology/malaga/$(am__dirstamp) \
	morphology/malaga/$(DEPDIR)/$(am__dirstamp)
morphology/malaga/basic.lo: morphology/malaga/$(am__dirstamp) \
	morphology/malaga/$(DEPDIR)/$(am__dirstamp)
morphology/malaga/input.lo: morphology/malaga/$(am__dirstamp) \
	morphology/malaga/$(DEPDIR)/$(am__dirstamp)
morphology/malaga/libmalaga.lo: morphology/malaga/$(am__dirstamp) \
	morphology/malaga/$(DEPDIR)/$(am__dirstamp)
morphology/malaga/malaga_lib.lo: morphology/malaga/$(am__dirstamp) \
	morphology/malaga/$(DEPDIR)/$(am__dirstamp)
morphology/malaga/pools.lo: morphology/malaga/$(am__dirstamp) \
	morphology/malaga/$(DEPDIR)/$(am__dirstamp)
morphology/malaga/scanner.lo: morphology/malaga/$(am__dirstamp) \
	morphology/malaga/$(DEPDIR)/$(am__dirstamp)
morphology/malaga/tries.lo: morphology/malaga/$(am__dirstamp) \
	morphology/malaga/$(DEPDIR)/$(am__dirstamp)
morphology/malaga/values.lo: morphology/malaga/$(am__dirstamp) \
	morphology/malaga/$(DEPDIR)/$(am__dirstamp)
setup/$(am__dirstamp):
	@$(MKDIR_P) setup
	@: > setup/$(am__dirstamp)
setup/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) setup/$(DEPDIR)
	@: > setup/$(DEPDIR)/$(am__dirstamp)
setup/setup.lo: setup/$(am__dirstamp) setup/$(DEPDIR)/$(am__dirstamp)
setup/Dictionary.lo: setup/$(am__dirstamp) \
	setup/$(DEPDIR)/$(am__dirstamp)
setup/DictionaryLoader.lo: setup/$(am__dirstamp) \
	setup/$(DEPDIR)/$(am__dirstamp)
setup/DictionaryException.lo: setup/$(am__dirstamp) \
	setup/$(DEPDIR)/$(am__dirstamp)
setup/interface.lo: setup/$(am__dirstamp) \
	setup/$(DEPDIR)/$(am__dirstamp)
hyphenator/$(am__dirstamp):
	@$(MKDIR_P) hyphenator
	@: > hyphenator/$(am__dirstamp)
hyphenator/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hyphenator/$(DEPDIR)
	@: > hyphenator/$(DEPDIR)/$(am__dirstamp)
hyphenator/hyphenator.lo: hyphenator/$(am__dirstamp) \
	hyphenator/$(DEPDIR)/$(am__dirstamp)
character/$(am__dirstamp):
	@$(MKDIR_P) character
	@: > character/$(am__dirstamp)
character/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) character/$(DEPDIR)
	@: > character/$(DEPDIR)/$(am__dirstamp)
character/charset.lo: character/$(am__dirstamp) \
	character/$(DEPDIR)/$(am__dirstamp)
tokenizer/$(am__dirstamp):
	@$(MKDIR_P) tokenizer
	@: > tokenizer/$(am__dirstamp)
tokenizer/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tokenizer/$(DEPDIR)
	@: > tokenizer/$(DEPDIR)/$(am__dirstamp)
tokenizer/tokenizer.lo: tokenizer/$(am__dirstamp) \
	tokenizer/$(DEPDIR)/$(am__dirstamp)
sentence/$(am__dirstamp):
	@$(MKDIR_P) sentence
	@: > sentence/$(am__dirstamp)
sentence/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sentence/$(DEPDIR)
	@: > sentence/$(DEPDIR)/$(am__dirstamp)
sentence/sentence.lo: sentence/$(am__dirstamp) \
	sentence/$(DEPDIR)/$(am__dirstamp)
grammar/$(am__dirstamp):
	@$(MKDIR_P) grammar
	@: > grammar/$(am__dirstamp)
grammar/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) grammar/$(DEPDIR)
	@: > grammar/$(DEPDIR)/$(am__dirstamp)
grammar/grammar.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/cache.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/checks.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/cachesetup.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/error.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/analysis.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/Sentence.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/Paragraph.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
grammar/CacheEntry.lo: grammar/$(am__dirstamp) \
	grammar/$(DEPDIR)/$(am__dirstamp)
autocorrect/$(am__dirstamp):
	@$(MKDIR_P) autocorrect
	@: > autocorrect/$(am__dirstamp)
autocorrect/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) autocorrect/$(DEPDIR)
	@: > autocorrect/$(DEPDIR)/$(am__dirstamp)
autocorrect/AutoCorrect.lo: autocorrect/$(am__dirstamp) \
	autocorrect/$(DEPDIR)/$(am__dirstamp)
libvoikko.la: $(libvoikko_la_OBJECTS) $(libvoikko_la_DEPENDENCIES) 
	$(libvoikko_la_LINK) -rpath $(libdir) $(libvoikko_la_OBJECTS) $(libvoikko_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f autocorrect/AutoCorrect.$(OBJEXT)
	-rm -f autocorrect/AutoCorrect.lo
	-rm -f character/charset.$(OBJEXT)
	-rm -f character/charset.lo
	-rm -f grammar/CacheEntry.$(OBJEXT)
	-rm -f grammar/CacheEntry.lo
	-rm -f grammar/Paragraph.$(OBJEXT)
	-rm -f grammar/Paragraph.lo
	-rm -f grammar/Sentence.$(OBJEXT)
	-rm -f grammar/Sentence.lo
	-rm -f grammar/analysis.$(OBJEXT)
	-rm -f grammar/analysis.lo
	-rm -f grammar/cache.$(OBJEXT)
	-rm -f grammar/cache.lo
	-rm -f grammar/cachesetup.$(OBJEXT)
	-rm -f grammar/cachesetup.lo
	-rm -f grammar/checks.$(OBJEXT)
	-rm -f grammar/checks.lo
	-rm -f grammar/error.$(OBJEXT)
	-rm -f grammar/error.lo
	-rm -f grammar/grammar.$(OBJEXT)
	-rm -f grammar/grammar.lo
	-rm -f hyphenator/hyphenator.$(OBJEXT)
	-rm -f hyphenator/hyphenator.lo
	-rm -f morphology/Analysis.$(OBJEXT)
	-rm -f morphology/Analysis.lo
	-rm -f morphology/Analyzer.$(OBJEXT)
	-rm -f morphology/Analyzer.lo
	-rm -f morphology/AnalyzerFactory.$(OBJEXT)
	-rm -f morphology/AnalyzerFactory.lo
	-rm -f morphology/MalagaAnalyzer.$(OBJEXT)
	-rm -f morphology/MalagaAnalyzer.lo
	-rm -f morphology/interface.$(OBJEXT)
	-rm -f morphology/interface.lo
	-rm -f morphology/malaga/analysis.$(OBJEXT)
	-rm -f morphology/malaga/analysis.lo
	-rm -f morphology/malaga/basic.$(OBJEXT)
	-rm -f morphology/malaga/basic.lo
	-rm -f morphology/malaga/files.$(OBJEXT)
	-rm -f morphology/malaga/files.lo
	-rm -f morphology/malaga/input.$(OBJEXT)
	-rm -f morphology/malaga/input.lo
	-rm -f morphology/malaga/lexicon.$(OBJEXT)
	-rm -f morphology/malaga/lexicon.lo
	-rm -f morphology/malaga/libmalaga.$(OBJEXT)
	-rm -f morphology/malaga/libmalaga.lo
	-rm -f morphology/malaga/malaga_files.$(OBJEXT)
	-rm -f morphology/malaga/malaga_files.lo
	-rm -f morphology/malaga/malaga_lib.$(OBJEXT)
	-rm -f morphology/malaga/malaga_lib.lo
	-rm -f morphology/malaga/patterns.$(OBJEXT)
	-rm -f morphology/malaga/patterns.lo
	-rm -f morphology/malaga/pools.$(OBJEXT)
	-rm -f morphology/malaga/pools.lo
	-rm -f morphology/malaga/rules.$(OBJEXT)
	-rm -f morphology/malaga/rules.lo
	-rm -f morphology/malaga/scanner.$(OBJEXT)
	-rm -f morphology/malaga/scanner.lo
	-rm -f morphology/malaga/symbols.$(OBJEXT)
	-rm -f morphology/malaga/symbols.lo
	-rm -f morphology/malaga/tries.$(OBJEXT)
	-rm -f morphology/malaga/tries.lo
	-rm -f morphology/malaga/value_parser.$(OBJEXT)
	-rm -f morphology/malaga/value_parser.lo
	-rm -f morphology/malaga/values.$(OBJEXT)
	-rm -f morphology/malaga/values.lo
	-rm -f sentence/sentence.$(OBJEXT)
	-rm -f sentence/sentence.lo
	-rm -f setup/Dictionary.$(OBJEXT)
	-rm -f setup/Dictionary.lo
	-rm -f setup/DictionaryException.$(OBJEXT)
	-rm -f setup/DictionaryException.lo
	-rm -f setup/DictionaryLoader.$(OBJEXT)
	-rm -f setup/DictionaryLoader.lo
	-rm -f setup/interface.$(OBJEXT)
	-rm -f setup/interface.lo
	-rm -f setup/setup.$(OBJEXT)
	-rm -f setup/setup.lo
	-rm -f spellchecker/SpellUtils.$(OBJEXT)
	-rm -f spellchecker/SpellUtils.lo
	-rm -f spellchecker/SpellWithPriority.$(OBJEXT)
	-rm -f spellchecker/SpellWithPriority.lo
	-rm -f spellchecker/spell.$(OBJEXT)
	-rm -f spellchecker/spell.lo
	-rm -f spellchecker/suggestion/Suggestion.$(OBJEXT)
	-rm -f spellchecker/suggestion/Suggestion.lo
	-rm -f spellchecker/suggestion/SuggestionGeneratorCaseChange.$(OBJEXT)
	-rm -f spellchecker/suggestion/SuggestionGeneratorCaseChange.lo
	-rm -f spellchecker/suggestion/SuggestionGeneratorDeletion.$(OBJEXT)
	-rm -f spellchecker/suggestion/SuggestionGeneratorDeletion.lo
	-rm -f spellchecker/suggestion/SuggestionGeneratorInsertSpecial.$(OBJEXT)
	-rm -f spellchecker/suggestion/SuggestionGeneratorInsertSpecial.lo
	-rm -f spellchecker/suggestion/SuggestionGeneratorInsertion.$(OBJEXT)
	-rm -f spellchecker/suggestion/SuggestionGeneratorInsertion.lo
	-rm -f spellchecker/suggestion/SuggestionGeneratorReplaceTwo.$(OBJEXT)
	-rm -f spellchecker/suggestion/SuggestionGeneratorReplaceTwo.lo
	-rm -f spellchecker/suggestion/SuggestionGeneratorReplacement.$(OBJEXT)
	-rm -f spellchecker/suggestion/SuggestionGeneratorReplacement.lo
	-rm -f spellchecker/suggestion/SuggestionGeneratorSplitWord.$(OBJEXT)
	-rm -f spellchecker/suggestion/SuggestionGeneratorSplitWord.lo
	-rm -f spellchecker/suggestion/SuggestionGeneratorSwap.$(OBJEXT)
	-rm -f spellchecker/suggestion/SuggestionGeneratorSwap.lo
	-rm -f spellchecker/suggestion/SuggestionGeneratorVowelChange.$(OBJEXT)
	-rm -f spellchecker/suggestion/SuggestionGeneratorVowelChange.lo
	-rm -f spellchecker/suggestion/SuggestionStatus.$(OBJEXT)
	-rm -f spellchecker/suggestion/SuggestionStatus.lo
	-rm -f spellchecker/suggestion/SuggestionStrategy.$(OBJEXT)
	-rm -f spellchecker/suggestion/SuggestionStrategy.lo
	-rm -f spellchecker/suggestion/SuggestionStrategyOcr.$(OBJEXT)
	-rm -f spellchecker/suggestion/SuggestionStrategyOcr.lo
	-rm -f spellchecker/suggestion/SuggestionStrategyTyping.$(OBJEXT)
	-rm -f spellchecker/suggestion/SuggestionStrategyTyping.lo
	-rm -f spellchecker/suggestions.$(OBJEXT)
	-rm -f spellchecker/suggestions.lo
	-rm -f tokenizer/tokenizer.$(OBJEXT)
	-rm -f tokenizer/tokenizer.lo
	-rm -f utils/StringUtils.$(OBJEXT)
	-rm -f utils/StringUtils.lo
	-rm -f utils/utils.$(OBJEXT)
	-rm -f utils/utils.lo

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@autocorrect/$(DEPDIR)/AutoCorrect.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@character/$(DEPDIR)/charset.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/CacheEntry.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/Paragraph.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/Sentence.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/analysis.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/cache.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/cachesetup.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/checks.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@grammar/$(DEPDIR)/grammar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@hyphenator/$(DEPDIR)/hyphenator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/$(DEPDIR)/Analysis.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/$(DEPDIR)/Analyzer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/$(DEPDIR)/AnalyzerFactory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/$(DEPDIR)/MalagaAnalyzer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/$(DEPDIR)/interface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/malaga/$(DEPDIR)/analysis.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/malaga/$(DEPDIR)/basic.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/malaga/$(DEPDIR)/files.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/malaga/$(DEPDIR)/input.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/malaga/$(DEPDIR)/lexicon.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/malaga/$(DEPDIR)/libmalaga.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/malaga/$(DEPDIR)/malaga_files.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/malaga/$(DEPDIR)/malaga_lib.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/malaga/$(DEPDIR)/patterns.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/malaga/$(DEPDIR)/pools.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/malaga/$(DEPDIR)/rules.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/malaga/$(DEPDIR)/scanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/malaga/$(DEPDIR)/symbols.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/malaga/$(DEPDIR)/tries.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/malaga/$(DEPDIR)/value_parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@morphology/malaga/$(DEPDIR)/values.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sentence/$(DEPDIR)/sentence.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@setup/$(DEPDIR)/Dictionary.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@setup/$(DEPDIR)/DictionaryException.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@setup/$(DEPDIR)/DictionaryLoader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@setup/$(DEPDIR)/interface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@setup/$(DEPDIR)/setup.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/SpellUtils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/SpellWithPriority.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/spell.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/$(DEPDIR)/suggestions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/Suggestion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorCaseChange.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorDeletion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorInsertSpecial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorInsertion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorReplaceTwo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorReplacement.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorSplitWord.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorSwap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionGeneratorVowelChange.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionStatus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionStrategy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionStrategyOcr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@spellchecker/suggestion/$(DEPDIR)/SuggestionStrategyTyping.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tokenizer/$(DEPDIR)/tokenizer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/StringUtils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/utils.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf autocorrect/.libs autocorrect/_libs
	-rm -rf character/.libs character/_libs
	-rm -rf grammar/.libs grammar/_libs
	-rm -rf hyphenator/.libs hyphenator/_libs
	-rm -rf morphology/.libs morphology/_libs
	-rm -rf morphology/malaga/.libs morphology/malaga/_libs
	-rm -rf sentence/.libs sentence/_libs
	-rm -rf setup/.libs setup/_libs
	-rm -rf spellchecker/.libs spellchecker/_libs
	-rm -rf spellchecker/suggestion/.libs spellchecker/suggestion/_libs
	-rm -rf tokenizer/.libs tokenizer/_libs
	-rm -rf utils/.libs utils/_libs
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkgconfigdir)" || $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)"
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkgconfigdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkgconfigdir)" && rm -f $$files
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)"
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkgincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkgincludedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f autocorrect/$(DEPDIR)/$(am__dirstamp)
	-rm -f autocorrect/$(am__dirstamp)
	-rm -f character/$(DEPDIR)/$(am__dirstamp)
	-rm -f character/$(am__dirstamp)
	-rm -f grammar/$(DEPDIR)/$(am__dirstamp)
	-rm -f grammar/$(am__dirstamp)
	-rm -f hyphenator/$(DEPDIR)/$(am__dirstamp)
	-rm -f hyphenator/$(am__dirstamp)
	-rm -f morphology/$(DEPDIR)/$(am__dirstamp)
	-rm -f morphology/$(am__dirstamp)
	-rm -f morphology/malaga/$(DEPDIR)/$(am__dirstamp)
	-rm -f morphology/malaga/$(am__dirstamp)
	-rm -f sentence/$(DEPDIR)/$(am__dirstamp)
	-rm -f sentence/$(am__dirstamp)
	-rm -f setup/$(DEPDIR)/$(am__dirstamp)
	-rm -f setup/$(am__dirstamp)
	-rm -f spellchecker/$(DEPDIR)/$(am__dirstamp)
	-rm -f spellchecker/$(am__dirstamp)
	-rm -f spellchecker/suggestion/$(DEPDIR)/$(am__dirstamp)
	-rm -f spellchecker/suggestion/$(am__dirstamp)
	-rm -f tokenizer/$(DEPDIR)/$(am__dirstamp)
	-rm -f tokenizer/$(am__dirstamp)
	-rm -f utils/$(DEPDIR)/$(am__dirstamp)
	-rm -f utils/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf autocorrect/$(DEPDIR) character/$(DEPDIR) grammar/$(DEPDIR) hyphenator/$(DEPDIR) morphology/$(DEPDIR) morphology/malaga/$(DEPDIR) sentence/$(DEPDIR) setup/$(DEPDIR) spellchecker/$(DEPDIR) spellchecker/suggestion/$(DEPDIR) tokenizer/$(DEPDIR) utils/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pkgconfigDATA install-pkgincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf autocorrect/$(DEPDIR) character/$(DEPDIR) grammar/$(DEPDIR) hyphenator/$(DEPDIR) morphology/$(DEPDIR) morphology/malaga/$(DEPDIR) sentence/$(DEPDIR) setup/$(DEPDIR) spellchecker/$(DEPDIR) spellchecker/suggestion/$(DEPDIR) tokenizer/$(DEPDIR) utils/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-pkgconfigDATA \
	uninstall-pkgincludeHEADERS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-pkgconfigDATA install-pkgincludeHEADERS install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-libLTLIBRARIES uninstall-pkgconfigDATA \
	uninstall-pkgincludeHEADERS

autocorrect/data.hpp: Makefile $(srcdir)/../data/autocorrect/fi_FI.xml $(srcdir)/autocorrect/triecompiler.py
	python $(srcdir)/autocorrect/triecompiler.py $(srcdir)/../data/autocorrect/fi_FI.xml autocorrect/data.hpp

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
